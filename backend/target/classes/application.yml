server:
  port: 8080
  tomcat:
    uri-encoding: UTF-8
    relaxed-query-chars: ['[', ']']

spring:
  datasource:
    url: jdbc:mariadb://localhost:3307/inventory_system
    driverClassName: org.mariadb.jdbc.Driver
    username: inventory
    password: inventory123
  
  jpa:
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: false
  
  security:
    user:
      name: admin
      password: admin123

  # CORS 설정 활성화
  mvc:
    cors:
      allowed-origins: "http://localhost:3000"
      allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
      allowed-headers: "*"
      allow-credentials: true

# 마이크로서비스 연동 설정
token-management-service:
  url: http://localhost:8083

registration-service:
  url: http://localhost:8082

# API 연동 설정 (레거시 - 향후 제거 예정)
cafe24:
  api:
    base-url: https://your-mall.cafe24api.com/api/v2
    client-id: ${CAFE24_CLIENT_ID:}
    client-secret: ${CAFE24_CLIENT_SECRET:}
    access-token: ${CAFE24_ACCESS_TOKEN:}

naver:
  api:
    base-url: https://api.commerce.naver.com
    client-id: ${NAVER_CLIENT_ID:}
    client-secret: ${NAVER_CLIENT_SECRET:}
    access-token: ${NAVER_ACCESS_TOKEN:}

coupang:
  api:
    base-url: https://api-gateway.coupang.com
    access-key: ${COUPANG_ACCESS_KEY:}
    secret-key: ${COUPANG_SECRET_KEY:}

# Gparts API 설정
gparts:
  api:
    base-url: https://api.gparts.co.kr
    api-key: ${GPARTS_API_KEY:}
    secret-key: ${GPARTS_SECRET_KEY:}
    timeout: 30000
    batch-size: 100

logging:
  level:
    com.inventory: DEBUG
    org.springframework.web: DEBUG
    org.springframework.web.cors: DEBUG
    org.springframework.security.web: DEBUG
    org.springframework.security.web.cors: DEBUG
    org.springframework.security.config.annotation.web.configurers: DEBUG
    org.springframework.security.config.annotation.web.configurers.CorsConfigurer: DEBUG